services:
  # Test database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ssts_test
      - POSTGRES_USER=ssts
      - POSTGRES_PASSWORD=test_password
    ports:
      - "5433:5432"
    tmpfs:
      - /var/lib/postgresql/data

  # Test Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    tmpfs:
      - /data

  # Test InfluxDB
  influxdb:
    image: influxdb:2.7-alpine
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=test_password
      - DOCKER_INFLUXDB_INIT_ORG=ssts
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=test-token
    ports:
      - "8087:8086"
    tmpfs:
      - /var/lib/influxdb2

  # Test application
  ssts-test:
    build:
      context: .
      target: go-builder
    environment:
      - SSTS_DATABASE_TYPE=postgres
      - SSTS_DATABASE_HOST=postgres
      - SSTS_DATABASE_PORT=5432
      - SSTS_DATABASE_USERNAME=ssts
      - SSTS_DATABASE_PASSWORD=test_password
      - SSTS_DATABASE_DATABASE=ssts_test
      - SSTS_INFLUXDB_URL=http://influxdb:8086
      - SSTS_INFLUXDB_TOKEN=test-token
      - SSTS_REDIS_ADDRESS=redis:6379
      - SSTS_LOG_LEVEL=debug
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - postgres
      - redis
      - influxdb

  # Web test runner
  web-test:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    environment:
      - CI=true
    volumes:
      - ./web:/app
      - /app/node_modules
    working_dir: /app
    command: npm test -- --coverage --watchAll=false

networks:
  default:
    name: ssts-test-network